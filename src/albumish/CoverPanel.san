package albumish;
import sanka.json.JsonElement;
import gtk.CellRenderer;
import gtk.ListStore;
import gtk.TreeIter;
import gtk.TreeView;
import gtk.TreeSelection;
import gtk.TreeViewColumn;
import gtk.Widget;
import albumish.filter.AlbumSorter;

class CoverPanel {

private Albumish player;
private AlbumSorter sorter;
private TreeView tree_view;
private ListStore list_store;

CoverPanel(Albumish player) {
    this.player = player;
    this.sorter = new AlbumSorter(player.database);
    this.tree_view = new TreeView();
    var renderer = CellRenderer.text();
    var column = new TreeViewColumn("Album", renderer, true, "text", 0);
    this.tree_view.append_column(column);
    this.list_store = new ListStore({ListStore.TYPE_STRING, ListStore.TYPE_INT});
    this.tree_view.set_model(this.list_store);
    // g_object_unref(list_store);

    var treeSelection = this.tree_view.get_selection();
    treeSelection.connect("changed", this);
}

Widget widget() {
    return this.tree_view;
}

void reset(int[] albumList) {
    this.sorter.sort(albumList);
    var row = {new JsonElement(), new JsonElement()};
    var iter = new TreeIter();
    var valid = this.list_store.get_iter_first(iter);
    for var albumid : albumList {
        if !valid {
            this.list_store.append(iter);
        }
        var album = this.player.database.album_list[albumid];
        row[0].makeString(album.name);
        row[1].makeInt(albumid);
        this.list_store.set(iter, row);
        valid = this.list_store.iter_next(iter);
    }
    while valid {
        valid = this.list_store.remove(iter);
    }
}

void sort(int sort_type) {
    this.sorter.set_sort_type(sort_type);
    var albumList = new int[];
    var iter = new TreeIter();
    var value = new JsonElement();
    for var ok = this.list_store.get_iter_first(iter); ok; ok = this.list_store.iter_next(iter) {
        this.list_store.get_value(iter, 1, value);
        albumList.add(value.getAsInt());
    }
    reset(albumList);
}

void callback(TreeSelection selection) {
    var iter = new TreeIter();
    if !selection.get_selected(iter) {
        return;
    }
    var value = new JsonElement();
    this.list_store.get_value(iter, 1, value);
    var albumid = value.getAsInt();
    this.player.select_album(albumid);
}
}
