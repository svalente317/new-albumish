package albumish;
import sanka.json.JsonElement;
import gtk.CellRenderer;
import gtk.ListStore;
import gtk.TreeSelection;
import gtk.TreeViewColumn;
import gtk.Widget;

class CoverPanel {

private Albumish player;
private Widget treeView;
private ListStore listStore;

CoverPanel(Albumish player) {
    this.player = player;
    this.treeView = Widget.treeView();
    var renderer = CellRenderer.text();
    var column = new TreeViewColumn("Album", renderer, true, "text", 0);
    this.treeView.appendColumn(column);
    this.listStore = new ListStore({ListStore.TYPE_STRING, ListStore.TYPE_INT});
    this.treeView.setModel(this.listStore);
    // g_object_unref(list_store);

    var treeSelection = this.treeView.getSelection();
    treeSelection.connect("changed", this);
}

Widget widget() {
    return this.treeView;
}

void reset(int[] albumList) {
    var row = {new JsonElement(), new JsonElement()};
    var iter = new TreeIter();
    for var albumid : albumList {
        var album = this.player.database.album_list[albumid];
        this.listStore.append(iter);
        row[0].makeString(album.name);
        row[1].makeInt(albumid);
        this.listStore.set(iter, row);
    }
}

void callback(TreeSelection selection) {
    var iter = new TreeIter();
    if !selection.getSelected(iter) {
        System.println("none");
        return;
    }
    var value = new JsonElement();
    this.listStore.getValue(iter, 1, value);
    var albumid = value.getAsInt();
    this.player.selectAlbum(albumid);
}

}
