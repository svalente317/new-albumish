package gtk;

class Widget {

c__include "gtk/gtk.h";
c__repr    "GtkWidget*";

static Widget window(Application app) {
    c__stmt "return gtk_application_window_new(app)";
}

void showAll() {
    c__stmt "gtk_widget_show_all(this)";
}

void destroy() {
    c__stmt "gtk_widget_destroy(this)";
}

void setTitle(String title) {
    c__stmt "return gtk_window_set_title(GTK_WINDOW(this), title)";
}

void setHExpand(boolean value) {
    c__stmt "gtk_widget_set_hexpand(this, value)";
}

void setVExpand(boolean value) {
    c__stmt "gtk_widget_set_vexpand(this, value)";
}

static Widget grid() {
    c__stmt "return gtk_grid_new()";
}

void attach(Widget widget, int x, int y, int width, int height) {
    c__stmt "gtk_grid_attach(GTK_GRID(this), widget, x, y, width, height)";
}

void add(Widget widget) {
    c__stmt "gtk_container_add(GTK_CONTAINER(this), widget)";
}

void setBorderWidth(int width) {
    c__stmt "gtk_container_set_border_width(GTK_CONTAINER(this), width)";
}

static Widget button(String label) {
    c__stmt "return gtk_button_new_with_label(label)";
}

static Widget listBox() {
    c__stmt "return gtk_list_box_new()";
}

static Widget listBoxRow() {
    c__stmt "return gtk_list_box_row_new()";
}

static Widget box(int orientation, int border) {
    c__stmt "return gtk_box_new(orientation, border)";
}

static Widget treeView() {
    c__stmt "return gtk_tree_view_new()";
}

void setModel(ListStore model) {
    c__stmt "gtk_tree_view_set_model(GTK_TREE_VIEW(this), GTK_TREE_MODEL(model));";
}

TreeSelection getSelection() {
    c__stmt "return gtk_tree_view_get_selection(GTK_TREE_VIEW(this))";
}

void appendColumn(TreeViewColumn column) {
    c__stmt "gtk_tree_view_append_column(GTK_TREE_VIEW(this), column)";
}

void connectRowActivated(RowActivatedCallback callback) {
    var signal = "row-activated";
    c__stmt "g_signal_connect(this, signal, G_CALLBACK(__row_activated_callback), callback)";
}

static Widget scrolledWindow() { // TODO adjustments
    c__stmt "return gtk_scrolled_window_new(NULL, NULL)";
}

const POLICY_ALWAYS = 0;
const POLICY_AUTOMATIC = 1;
const POLICY_NEVER = 2;
const POLICY_EXTERNAL = 3;

void setPolicy(int hpolicy, int vpolicy) {
    c__stmt "gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(this), hpolicy, vpolicy)";
}

const SHADOW_NONE = 0;
const SHADOW_IN = 1;
const SHADOW_OUT = 2;
const SHADOW_ETCHED_IN = 3;
const SHADOW_ETCHED_OUT = 4;

void setShadowType(int type) {
    c__stmt "gtk_scrolled_window_set_shadow_type(GTK_SCROLLED_WINDOW(this), type)";
}

c__stmt "void __row_activated_callback(GtkTreeView* self, GtkTreePath* path, GtkTreeViewColumn* column, gpointer user_data)";
c__stmt"{ RowActivatedCallback__rowActivated((struct RowActivatedCallback *) user_data, self, path, column); }";
}
