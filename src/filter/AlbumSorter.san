/*
 *  Copyright (c) 2014  Salvatore Valente <svalente@mit.edu>
 *
 *  This program is free software.  You can modify and distribute it under
 *  the terms of the GNU General License.  There is no warranty.
 *  See the file "COPYING" for more information.
 */
package albumish.filter;
import albumish.database.Database;

class AlbumSorter {

    const YEAR_NEWEST = 0;
    const YEAR_OLDEST = 1;
    const ALBUM = 2;
    const ARTIST = 3;

    private Database database;
    private int sort_type;

    AlbumSorter(Database database) {
        this.database = database;
    }

    void set_sort_type(int sort_type) {
        this.sort_type = sort_type;
    }

    void sort(int[] arr) {
        for var i = 1; i < arr.length; i++ {
            var key = arr[i];
            var j = i - 1;
            while j >= 0 && compare(arr[j], key) > 0 {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

    int compare(int id1, int id2) {
        var a1 = this.database.album_list[id1];
        var a2 = this.database.album_list[id2];
        var value = 0;
        switch this.sort_type {
        case YEAR_NEWEST:
            value = a2.year - a1.year;
            break;
        case YEAR_OLDEST:
            value = a1.year - a2.year;
            break;
        case ALBUM:
            value = string_compare(a1.name, a2.name);
            break;
        case ARTIST:
            value = string_compare(
                    this.database.artist_list[a1.artistid].name,
                    this.database.artist_list[a2.artistid].name);
            break;
        }
        if value != 0 {
            return value;
        }
        switch this.sort_type {
        case ARTIST:
            value = a1.year - a2.year;
            break;
        case YEAR_NEWEST:
        case YEAR_OLDEST:
            value = string_compare(a1.name, a2.name);
            break;
        case ALBUM:
            value = string_compare(
                    this.database.artist_list[a1.artistid].name,
                    this.database.artist_list[a2.artistid].name);
            break;
        }
        return value;
    }

    private static int string_compare(String s1, String s2) {
        if s1 == null {
            if s2 == null {
                return 0;
            }
            return 1;
        } else if s2 == null {
            return -1;
        }
        // TODO return s1.toLowerCase().compareTo(s2.toLowerCase());
        return s1 < s2 ? -1 : (s1 > s2 ? 1 : 0);
    }
}
